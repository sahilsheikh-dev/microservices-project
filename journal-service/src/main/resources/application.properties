# Application Name
spring.application.name=JournalService
server.port=${SERVER_PORT:8082}

# MongoDB Configuration
spring.data.mongodb.uri=${DB_URI:mongodb://root:rootpassword@localhost:27017/journalservice?authSource=admin}

# Logging
spring.main.banner-mode=off
logging.level.root=warn
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace
logging.level.org.springframework=DEBUG

# Kafka Consumer Config
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=${GROUP_ID:journal-service-group}
app.kafka.topic.userCreated=${TOPIC_USER_CREATED:user-events}
user-service.failed.events=${TOPIC_USER_FAILED:user-operation-failed}

# OpenAPI / Swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Security JWT/Admin Credentials Configuration
app.jwt.secret=${JWT_SECRET:w3nFB9T2zYlT5hUvDdDmcJ9U7NfFcEYbAKtqucCiwgKaVZTjhS3lmA3FlCJeJXJf}
app.jwt.expiration-in-ms=${JWT_EXPIRATION:3600000}
admin.email=${ADMIN_EMAIL:admin@example.com}
admin.password=${ADMIN_PASSWORD:admin123}
